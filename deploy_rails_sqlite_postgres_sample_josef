

See Here (github)
https://github.com/tomGdow/deploy_rails

Succeeded in deploying to Heroku, starting with sqlite in
devlelopment, but could not deploy to Digital Ocean 
in PRODUCTION, so abandoned and tried to create a
Rails project with pg as only db. 



# VM, acp
# rails new deploy_rails $$ cd $_; bundle install
rs0
rails generate scaffold Product name:string description:text price:float
rake db:migrate
#config/routes.rb
route to products/index
rs0
All OK

#Github repo set up, initialized and pushed

[Essential] added pg database to gemfile
group :production do
    gem 'pg'
    gem 'rails_12factor'
end

group :development, :test do
    gem 'sqlite3'
end

# config/application.rb
config.assets.initialize_on_precompile = false

bundle install
git add .
git commit -am ""

heroku create
git push heroku master
https://git.heroku.com/vast-river-8627.git
# remove the 's' from https
ooooh
heroku run rake db:migrate
http://git.heroku.com/vast-river-8627.git
# All OK
heroku rename deployrails

http://deployrails.herokuapp.com/products/new

#All is well 

Go to Digital ocean
www
cd html
sudo git clone <repo>
sudo chown -R $USER:$USER /var/www/html/deploy_rails
#Phushion Passenger
gem install passenger

Add the following to Apache Config file

LoadModule passenger_module /home/tomgdow/.rbenv/versions/2.2.0/lib/ruby/gems/2.2.0/gems/passenger-5.0.20/buildout/apache2/mod_passenger.so                                                                                  
   <IfModule mod_passenger.c>
     PassengerRoot /home/tomgdow/.rbenv/versions/2.2.0/lib/ruby/gems/2.2.0/gems/passenger-5.0.20
     PassengerDefaultRuby /home/tomgdow/.rbenv/versions/2.2.0/bin/ruby
   </IfModule>

   *** But of course the above has already been done**
   
   apa
   cd sites-available
   created deploy_rails.conf
   
   # Now go to digital ocean online
   
   
   back to DO command line
   
   sudo a2ensite deploy_rails
   sudo service apache2 restart
   
   www
   cd html
   cd deploy_rails
   bundle install
   
   
   rake db:migrate
   
   http://deployrails.tomgdow.com/products
   Works!! 
   
   NO! not in production
   working from here : http://stackoverflow.com/questions/29241053/incomplete-response-received-from-application-from-nginx-passenger
   
   
   Tried adding sectret key to .bashrc, but did not work!
   
  Left things here, and decided to create Rails project with pg as only db (no sqlite)
   
   sudo service postgresql start
   su -postgres
   
 
### So after success of pgrailsdeploy, returned to this project 

# In config/database.yml, modified production env as follows:

production:
  adapter: postgresql
  database: deployrails_production
  encoding: unicode
  pool: 5
  username: tomgdow
  password: <%= ENV['PGRAILS_DATABASE_PASSWORD'] %>
  timeout: 5000
  
 rake db:create:all
 # Error message that sqlite already exists, but OK
 # In app folder
 RAILS_ENV=production rake db:migrate
 
 http://deployrails.tomgdow.com/products
 
 ## All is well!!
 #(have not touched secrets.yml)
 
 
 # So now check pg
 sudo -u postgres psql
 
 postgres=# \l
                                          List of databases
           Name            |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileges   
---------------------------+----------+----------+-------------+-------------+-----------------------
 deployrails_production    | tomgdow  | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 pgrailsdeploy_development | tomgdow  | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/tomgdow          +
                           |          |          |             |             | tomgdow=CTc/tomgdow
 pgrailsdeploy_production  | tomgdow  | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =Tc/tomgdow          +
                           |          |          |             |             | tomgdow=CTc/tomgdow
 pgrailsdeploy_test        | tomgdow  | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 postgres                  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | 
 template0                 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
                           |          |          |             |             | postgres=CTc/postgres
 template1                 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres          +
                           |          |          |             |             | postgres=CTc/postgres
						
postgres=# \c deployrails_production 
You are now connected to database "deployrails_production" as user "postgres".
deployrails_production=# \dt
              List of relations
 Schema |       Name        | Type  |  Owner  
--------+-------------------+-------+---------
 public | products          | table | tomgdow
 public | schema_migrations | table | tomgdow
(2 rows)deployrails_production=# select * from products;
 id |   name    |            description             | price |         created_at         |         updated_at         
----+-----------+------------------------------------+-------+----------------------------+----------------------------
  1 | A sissors | An implement for cutting           |   222 | 2015-09-28 12:21:25.304079 | 2015-09-28 12:21:25.304079
  2 | a needle  | An implement for sewing on buttons |   255 | 2015-09-28 12:23:31.410592 | 2015-09-28 12:23:31.410592
(2 rows)

## Success!! 
