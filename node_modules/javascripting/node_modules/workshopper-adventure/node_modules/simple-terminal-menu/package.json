{
  "name": "simple-terminal-menu",
  "version": "1.1.1",
  "description": "A menu that is easier to use on the terminal than terminal-menu ",
  "main": "simple-terminal-menu.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:martinheidegger/simple-terminal-menu.git"
  },
  "keywords": [
    "menu",
    "cli"
  ],
  "author": {
    "name": "Martin Heidegger",
    "email": "martin.heidegger@gmail.com"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/martinheidegger/simple-terminal-menu/issues"
  },
  "homepage": "https://github.com/martinheidegger/simple-terminal-menu",
  "dependencies": {
    "chalk": "^1.1.1",
    "extended-terminal-menu": "^2.1.2",
    "visualwidth": "^0.1.0",
    "xtend": "^4.0.0"
  },
  "readme": "# simple-terminal-menu\n[terminal-menu](github.com/substack/terminal-menu) does a good job for starting a menu but it is a bit tedious to set-up reliably for process.stdin / process.stdout and also for the use with double width characters.\n\nFor simply taking charge of the power this terminal menu offers a few things:\n\n## Automatically connects to process.stdin/stdout\nYou don't have to do that, it will just work :)\n\n## Markers\n`.add` gets an new signature\n\n```JavaScript\n.add(<label>[, <marker>][, <cb>])\n```\n\nWith this you can add entries that have a right-aligned marker text shown.\n\n## Menu Items\nYou can also use `.addItem` to use objects to add menu items.\n\n```JavaScript\n.addItem({\n  label: \"<label>\",\n  marker: \"<marker>\",\n  handler: \"<cb>\"\n})\n```\n\n## Separators\nJust use ```.writeSeparator()``` to create a separator line.\n\n## Automatic truncating of entries\nIf an entry exceeds the width of the menu it will be truncated with `opts.truncator` or `...`\n\n## Writing of text\nSimilar like `.add` it supports `.writeLine` that allows you to write a text that is both left & right aligned.\n\n```JavaScript\n.writeLine(<left>[, <right>])\n```\n\n## tty Tests\nIf the terminal doesn't support TTY the  will just return `null`!\n\n## Comfort functions\nTo write a nice title and subtitle the comfort functions `.writeTitle` and `.writeSubtitle` exist.\n\n## Factory\nIf you have several menus that need to look alike, you can use the factory. It is available via `require(simple-terminal-menu/factory)`.\n\n\n# Installation & Usage\nInstall it using npm\n\n```\nnpm install simple-terminal-menu --save\n```\n\nAnd then create a menu it in your code using\n\n```JavaScript\nvar createMenu = require('../simple-terminal-menu')\n\nfunction showSelection(label, marker) {\n  console.log(\"label: \" + label + \"; marker: \" + marker + \";\")\n}\n\nfunction mainMenu() {\n  var menu = createMenu({ // settings passed through to terminal-menu\n    x: 3,\n    y: 2\n  })\n  menu.writeLine(\"My Menu\", \"(tm)\")\n  menu.writeSeparator()\n  menu.add(\"A\", \"[selected]\", showSelection)\n  menu.add(\"B\", showSelection)\n  menu.writeSeparator()\n  menu.add(\"open submenu\", subMenu)\n  menu.add(\"exit\", menu.close)\n}\n\nfunction subMenu() {\n  var menu = createMenu()\n  menu.writeLine(\"SubMenu\")\n  menu.writeSeparator()\n  menu.add(\"C\", \"[selected]\", showSelection)\n  menu.add(\"D\", showSelection)\n  menu.writeSeparator()\n  menu.add(\"cancel\", mainMenu)\n  menu.add(\"niceTitle\", nicelyTitledMenu)\n  menu.add(\"exit\", menu.close)\n}\n\nfunction nicelyTitledMenu() {\n  var menu = createMenu();\n  menu.writeTitle(\"Awesome window\")\n  menu.writeSubtitle(\"A little more colorful\")\n  menu.writeSeperator()\n  menu.add(\"cancel\", subMenu)\n  menu.add(\"factoryA\", factoryMenuA)\n  menu.add(\"exit\", menu.close)\n}\n\n\n// Options for the menu when created through the factory\nvar factoryMenuOptions = {} // Can be empty! the factory uses some sensible defaults!\n\n// Defaults for creating menu with the factory\nvar defaultFactoryOptions = {\n  title: \"Factory Title\",\n  // you could also specify `subtitle:`, menu & extras are not available.\n}\nvar factory = require('simple-terminal-menu/factory')(factoryMenuOptions, defaultFactoryOptions);\n\nfunction factoryMenuA() {\n  factory.create({\n    subtitle: \"factory-a\",\n    menu: [{\n      label: \"E\",\n      handler: showSelection\n    }, {\n      label: \"F\",\n      handler: showSelection\n    }],\n    extras: [{\n        label: \"factoryB\",\n        handler: factoryMenuB\n      },{\n        label: \"cancel\",\n        handler: nicelyTitledMenu\n      }]\n  })\n}\n\nfunction factoryMenuB() {\n  factory.create({\n    subtitle: \"factory-b\",\n    menu: [{\n        label: \"G\",\n        handler: showSelection\n      }],\n    extras: [{\n        label: \"factoryA\",\n        handler: factoryMenuA\n      },{\n        label: \"cancel\",\n        handler: nicelyTitledMenu\n      }]\n}\n\n\nmainMenu()\n```\n\n",
  "readmeFilename": "Readme.md",
  "_id": "simple-terminal-menu@1.1.1",
  "dist": {
    "shasum": "e07968c1ab2147cac9b1a01a711b87b7314e8f91"
  },
  "_from": "simple-terminal-menu@^1.1.1",
  "_resolved": "https://registry.npmjs.org/simple-terminal-menu/-/simple-terminal-menu-1.1.1.tgz"
}
